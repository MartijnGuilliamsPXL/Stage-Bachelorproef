@using System.IO.Ports
@using System.IO

@page "/Chart"
@inject HttpClient Http

<PageTitle>Chart</PageTitle>

@inject IJSRuntime JSRuntime

<canvas id="myChart" width="400" height="200"></canvas>

@code {
    
    private SerialPort serialPort = new SerialPort();
    private List<double> dataPoints = new List<double>();

    protected override async Task OnInitializedAsync()
    {
        serialPort = new SerialPort
        {
            PortName = "COM4", // Replace with your actual port name
            BaudRate = 9600,
            Parity = Parity.None,
            DataBits = 8,
            StopBits = StopBits.One
        };

        try
        {
            serialPort.Open(); // Use synchronous Open method
            serialPort.DataReceived += OnDataReceived;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error opening serial port: {ex.Message}");
        }

    }

    private void OnDataReceived(object sender, SerialDataReceivedEventArgs e)
    {
        try
        {
            string data = serialPort.ReadLine();
            if (double.TryParse(data, out double value))
            {
                dataPoints.Add(value);

                // Limit data points to prevent memory issues (adjust as needed)
                if (dataPoints.Count > 1000)
                {
                    dataPoints.RemoveAt(0);
                }

                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error parsing data: {ex.Message}");
        }
    }

    private async Task UpdateChart()
    {
        await JSRuntime.InvokeAsync<object>("updateChart", dataPoints.ToArray());
    }
}
